import{defineConfig as f}from"tsup";import{NodeResolvePlugin as m}from"@esbuild-plugins/node-resolve";import a from"fs";import r from"path";const o=r.resolve(process.cwd(),"../../","packages/ridb-core"),l={name:"wasm",setup(e){e.onResolve({filter:/\.wasm$/},t=>a.existsSync(r.resolve(o,t.path))?{path:r.resolve(o,t.path),namespace:"wasm"}:{path:r.resolve("../../node_modules",t.path),namespace:"wasm"}),e.onLoad({filter:/.*/,namespace:"wasm"},async t=>({contents:`export default Buffer.from("${(await a.promises.readFile(t.path)).toString("base64")}", "base64")`,loader:"js"}))}},u=[m({extensions:[".ts",".js",".wasm"],onResolved:e=>e.includes("node_modules")?{external:!0}:e})];function p({format:e,entry:t,banner:n,platform:s}){return f(({watch:c})=>({entry:t,format:e,outDir:"build",target:"esnext",minify:!1,clean:!1,esbuildPlugins:[l,...u],banner:n,esbuildOptions:(i,d)=>{i.platform=s||"neutral"},external:["buffer","next","vitest","react-server-dom-webpack","tsup","react-server-dom-webpack/client.edge","@trust0/ridb/worker"]}))}export{p as default,u as plugins,l as wasmPlugin};
